
Device_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000634  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007c8  080007d0  000107d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007c8  080007c8  000107d0  2**0
                  CONTENTS
  4 .ARM          00000000  080007c8  080007c8  000107d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007c8  080007d0  000107d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007c8  080007c8  000107c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080007cc  080007cc  000107cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000107d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000107d0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000107d0  2**0
                  CONTENTS, READONLY
 13 .comment      00000050  00000000  00000000  000107fa  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000990  00000000  00000000  0001084a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000002c8  00000000  00000000  000111da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000c0  00000000  00000000  000114a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 00000098  00000000  00000000  00011568  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00000529  00000000  00000000  00011600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000f14  00000000  00000000  00011b29  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000055f4  00000000  00000000  00012a3d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000024c  00000000  00000000  00018034  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080007b0 	.word	0x080007b0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080007b0 	.word	0x080007b0

080001d4 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	460b      	mov	r3, r1
 80001de:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001e0:	78fb      	ldrb	r3, [r7, #3]
 80001e2:	2b01      	cmp	r3, #1
 80001e4:	d141      	bne.n	800026a <GPIO_PeriClockControl+0x96>
	{
		if(pGPIOx == GPIOA)
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80001ec:	d106      	bne.n	80001fc <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PClk_EN();
 80001ee:	4b42      	ldr	r3, [pc, #264]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80001f0:	695b      	ldr	r3, [r3, #20]
 80001f2:	4a41      	ldr	r2, [pc, #260]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80001f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80001f8:	6153      	str	r3, [r2, #20]
		{
			GPIOF_PClk_DI();
		}
	}

}
 80001fa:	e077      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOB)
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	4a3f      	ldr	r2, [pc, #252]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000200:	4293      	cmp	r3, r2
 8000202:	d106      	bne.n	8000212 <GPIO_PeriClockControl+0x3e>
			GPIOB_PClk_EN();
 8000204:	4b3c      	ldr	r3, [pc, #240]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 8000206:	695b      	ldr	r3, [r3, #20]
 8000208:	4a3b      	ldr	r2, [pc, #236]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 800020a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800020e:	6153      	str	r3, [r2, #20]
}
 8000210:	e06c      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOC)
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	4a3a      	ldr	r2, [pc, #232]	; (8000300 <GPIO_PeriClockControl+0x12c>)
 8000216:	4293      	cmp	r3, r2
 8000218:	d106      	bne.n	8000228 <GPIO_PeriClockControl+0x54>
			GPIOC_PClk_EN();
 800021a:	4b37      	ldr	r3, [pc, #220]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 800021c:	695b      	ldr	r3, [r3, #20]
 800021e:	4a36      	ldr	r2, [pc, #216]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 8000220:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000224:	6153      	str	r3, [r2, #20]
}
 8000226:	e061      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOD)
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	4a36      	ldr	r2, [pc, #216]	; (8000304 <GPIO_PeriClockControl+0x130>)
 800022c:	4293      	cmp	r3, r2
 800022e:	d106      	bne.n	800023e <GPIO_PeriClockControl+0x6a>
			GPIOD_PClk_EN();
 8000230:	4b31      	ldr	r3, [pc, #196]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 8000232:	695b      	ldr	r3, [r3, #20]
 8000234:	4a30      	ldr	r2, [pc, #192]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 8000236:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800023a:	6153      	str	r3, [r2, #20]
}
 800023c:	e056      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOE)
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	4a31      	ldr	r2, [pc, #196]	; (8000308 <GPIO_PeriClockControl+0x134>)
 8000242:	4293      	cmp	r3, r2
 8000244:	d106      	bne.n	8000254 <GPIO_PeriClockControl+0x80>
			GPIOE_PClk_EN();
 8000246:	4b2c      	ldr	r3, [pc, #176]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 8000248:	695b      	ldr	r3, [r3, #20]
 800024a:	4a2b      	ldr	r2, [pc, #172]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 800024c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000250:	6153      	str	r3, [r2, #20]
}
 8000252:	e04b      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOF)
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	4a2d      	ldr	r2, [pc, #180]	; (800030c <GPIO_PeriClockControl+0x138>)
 8000258:	4293      	cmp	r3, r2
 800025a:	d147      	bne.n	80002ec <GPIO_PeriClockControl+0x118>
			GPIOF_PClk_EN();
 800025c:	4b26      	ldr	r3, [pc, #152]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 800025e:	695b      	ldr	r3, [r3, #20]
 8000260:	4a25      	ldr	r2, [pc, #148]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 8000262:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000266:	6153      	str	r3, [r2, #20]
}
 8000268:	e040      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		if(pGPIOx == GPIOA)
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8000270:	d106      	bne.n	8000280 <GPIO_PeriClockControl+0xac>
			GPIOA_PClk_DI();
 8000272:	4b21      	ldr	r3, [pc, #132]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 8000274:	695b      	ldr	r3, [r3, #20]
 8000276:	4a20      	ldr	r2, [pc, #128]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 8000278:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800027c:	6153      	str	r3, [r2, #20]
}
 800027e:	e035      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOB)
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4a1e      	ldr	r2, [pc, #120]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d106      	bne.n	8000296 <GPIO_PeriClockControl+0xc2>
			GPIOB_PClk_DI();
 8000288:	4b1b      	ldr	r3, [pc, #108]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 800028a:	695b      	ldr	r3, [r3, #20]
 800028c:	4a1a      	ldr	r2, [pc, #104]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 800028e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000292:	6153      	str	r3, [r2, #20]
}
 8000294:	e02a      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOC)
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a19      	ldr	r2, [pc, #100]	; (8000300 <GPIO_PeriClockControl+0x12c>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d106      	bne.n	80002ac <GPIO_PeriClockControl+0xd8>
			GPIOC_PClk_DI();
 800029e:	4b16      	ldr	r3, [pc, #88]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80002a0:	695b      	ldr	r3, [r3, #20]
 80002a2:	4a15      	ldr	r2, [pc, #84]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80002a4:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 80002a8:	6153      	str	r3, [r2, #20]
}
 80002aa:	e01f      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOD)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a15      	ldr	r2, [pc, #84]	; (8000304 <GPIO_PeriClockControl+0x130>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d106      	bne.n	80002c2 <GPIO_PeriClockControl+0xee>
			GPIOD_PClk_DI();
 80002b4:	4b10      	ldr	r3, [pc, #64]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80002b6:	695b      	ldr	r3, [r3, #20]
 80002b8:	4a0f      	ldr	r2, [pc, #60]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80002ba:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80002be:	6153      	str	r3, [r2, #20]
}
 80002c0:	e014      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOE)
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a10      	ldr	r2, [pc, #64]	; (8000308 <GPIO_PeriClockControl+0x134>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d106      	bne.n	80002d8 <GPIO_PeriClockControl+0x104>
			GPIOE_PClk_DI();
 80002ca:	4b0b      	ldr	r3, [pc, #44]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80002cc:	695b      	ldr	r3, [r3, #20]
 80002ce:	4a0a      	ldr	r2, [pc, #40]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80002d0:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80002d4:	6153      	str	r3, [r2, #20]
}
 80002d6:	e009      	b.n	80002ec <GPIO_PeriClockControl+0x118>
		}else if (pGPIOx == GPIOF)
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a0c      	ldr	r2, [pc, #48]	; (800030c <GPIO_PeriClockControl+0x138>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d105      	bne.n	80002ec <GPIO_PeriClockControl+0x118>
			GPIOF_PClk_DI();
 80002e0:	4b05      	ldr	r3, [pc, #20]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80002e2:	695b      	ldr	r3, [r3, #20]
 80002e4:	4a04      	ldr	r2, [pc, #16]	; (80002f8 <GPIO_PeriClockControl+0x124>)
 80002e6:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80002ea:	6153      	str	r3, [r2, #20]
}
 80002ec:	bf00      	nop
 80002ee:	370c      	adds	r7, #12
 80002f0:	46bd      	mov	sp, r7
 80002f2:	bc80      	pop	{r7}
 80002f4:	4770      	bx	lr
 80002f6:	bf00      	nop
 80002f8:	40021000 	.word	0x40021000
 80002fc:	48000400 	.word	0x48000400
 8000300:	48000800 	.word	0x48000800
 8000304:	48000c00 	.word	0x48000c00
 8000308:	48001000 	.word	0x48001000
 800030c:	48001400 	.word	0x48001400

08000310 <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000310:	b580      	push	{r7, lr}
 8000312:	b086      	sub	sp, #24
 8000314:	af00      	add	r7, sp, #0
 8000316:	6078      	str	r0, [r7, #4]
	 //enable the peripheral clock

	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	2101      	movs	r1, #1
 800031e:	4618      	mov	r0, r3
 8000320:	f7ff ff58 	bl	80001d4 <GPIO_PeriClockControl>

	 uint32_t temp=0; //temp. register
 8000324:	2300      	movs	r3, #0
 8000326:	617b      	str	r3, [r7, #20]

	//1 . configure the mode of gpio pin

	 if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= 3)
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	795b      	ldrb	r3, [r3, #5]
 800032c:	2b03      	cmp	r3, #3
 800032e:	d820      	bhi.n	8000372 <GPIO_Init+0x62>
	 {
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	795b      	ldrb	r3, [r3, #5]
 8000334:	461a      	mov	r2, r3
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	791b      	ldrb	r3, [r3, #4]
 800033a:	005b      	lsls	r3, r3, #1
 800033c:	fa02 f303 	lsl.w	r3, r2, r3
 8000340:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	681a      	ldr	r2, [r3, #0]
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	791b      	ldrb	r3, [r3, #4]
 800034c:	005b      	lsls	r3, r3, #1
 800034e:	2103      	movs	r1, #3
 8000350:	fa01 f303 	lsl.w	r3, r1, r3
 8000354:	43db      	mvns	r3, r3
 8000356:	4619      	mov	r1, r3
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	400a      	ands	r2, r1
 800035e:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	6819      	ldr	r1, [r3, #0]
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	697a      	ldr	r2, [r7, #20]
 800036c:	430a      	orrs	r2, r1
 800036e:	601a      	str	r2, [r3, #0]
 8000370:	e0a1      	b.n	80004b6 <GPIO_Init+0x1a6>
	 }
	 else
	 {
		// 1. F/R/RF trigger configure
		 if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	795b      	ldrb	r3, [r3, #5]
 8000376:	2b04      	cmp	r3, #4
 8000378:	d117      	bne.n	80003aa <GPIO_Init+0x9a>
		 {
			 // SET falling trigger mechanism
			 EXTI->FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800037a:	4ba0      	ldr	r3, [pc, #640]	; (80005fc <GPIO_Init+0x2ec>)
 800037c:	68db      	ldr	r3, [r3, #12]
 800037e:	687a      	ldr	r2, [r7, #4]
 8000380:	7912      	ldrb	r2, [r2, #4]
 8000382:	4611      	mov	r1, r2
 8000384:	2201      	movs	r2, #1
 8000386:	408a      	lsls	r2, r1
 8000388:	4611      	mov	r1, r2
 800038a:	4a9c      	ldr	r2, [pc, #624]	; (80005fc <GPIO_Init+0x2ec>)
 800038c:	430b      	orrs	r3, r1
 800038e:	60d3      	str	r3, [r2, #12]
			 // Clear Raising trigger mechanism
			 EXTI->RTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000390:	4b9a      	ldr	r3, [pc, #616]	; (80005fc <GPIO_Init+0x2ec>)
 8000392:	689b      	ldr	r3, [r3, #8]
 8000394:	687a      	ldr	r2, [r7, #4]
 8000396:	7912      	ldrb	r2, [r2, #4]
 8000398:	4611      	mov	r1, r2
 800039a:	2201      	movs	r2, #1
 800039c:	408a      	lsls	r2, r1
 800039e:	43d2      	mvns	r2, r2
 80003a0:	4611      	mov	r1, r2
 80003a2:	4a96      	ldr	r2, [pc, #600]	; (80005fc <GPIO_Init+0x2ec>)
 80003a4:	400b      	ands	r3, r1
 80003a6:	6093      	str	r3, [r2, #8]
 80003a8:	e035      	b.n	8000416 <GPIO_Init+0x106>
		 }
		 else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	795b      	ldrb	r3, [r3, #5]
 80003ae:	2b05      	cmp	r3, #5
 80003b0:	d117      	bne.n	80003e2 <GPIO_Init+0xd2>
		 {
			 // SET Raising  trigger mechanism
			 EXTI->RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b2:	4b92      	ldr	r3, [pc, #584]	; (80005fc <GPIO_Init+0x2ec>)
 80003b4:	689b      	ldr	r3, [r3, #8]
 80003b6:	687a      	ldr	r2, [r7, #4]
 80003b8:	7912      	ldrb	r2, [r2, #4]
 80003ba:	4611      	mov	r1, r2
 80003bc:	2201      	movs	r2, #1
 80003be:	408a      	lsls	r2, r1
 80003c0:	4611      	mov	r1, r2
 80003c2:	4a8e      	ldr	r2, [pc, #568]	; (80005fc <GPIO_Init+0x2ec>)
 80003c4:	430b      	orrs	r3, r1
 80003c6:	6093      	str	r3, [r2, #8]
			 // Clear Falling trigger mechanism
			 EXTI->FTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003c8:	4b8c      	ldr	r3, [pc, #560]	; (80005fc <GPIO_Init+0x2ec>)
 80003ca:	68db      	ldr	r3, [r3, #12]
 80003cc:	687a      	ldr	r2, [r7, #4]
 80003ce:	7912      	ldrb	r2, [r2, #4]
 80003d0:	4611      	mov	r1, r2
 80003d2:	2201      	movs	r2, #1
 80003d4:	408a      	lsls	r2, r1
 80003d6:	43d2      	mvns	r2, r2
 80003d8:	4611      	mov	r1, r2
 80003da:	4a88      	ldr	r2, [pc, #544]	; (80005fc <GPIO_Init+0x2ec>)
 80003dc:	400b      	ands	r3, r1
 80003de:	60d3      	str	r3, [r2, #12]
 80003e0:	e019      	b.n	8000416 <GPIO_Init+0x106>
		 }
		 else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	795b      	ldrb	r3, [r3, #5]
 80003e6:	2b06      	cmp	r3, #6
 80003e8:	d115      	bne.n	8000416 <GPIO_Init+0x106>
		 {
			 // SET falling trigger mechanism
			 EXTI->FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ea:	4b84      	ldr	r3, [pc, #528]	; (80005fc <GPIO_Init+0x2ec>)
 80003ec:	68db      	ldr	r3, [r3, #12]
 80003ee:	687a      	ldr	r2, [r7, #4]
 80003f0:	7912      	ldrb	r2, [r2, #4]
 80003f2:	4611      	mov	r1, r2
 80003f4:	2201      	movs	r2, #1
 80003f6:	408a      	lsls	r2, r1
 80003f8:	4611      	mov	r1, r2
 80003fa:	4a80      	ldr	r2, [pc, #512]	; (80005fc <GPIO_Init+0x2ec>)
 80003fc:	430b      	orrs	r3, r1
 80003fe:	60d3      	str	r3, [r2, #12]
			 // SET Raising  trigger mechanism
			 EXTI->RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000400:	4b7e      	ldr	r3, [pc, #504]	; (80005fc <GPIO_Init+0x2ec>)
 8000402:	689b      	ldr	r3, [r3, #8]
 8000404:	687a      	ldr	r2, [r7, #4]
 8000406:	7912      	ldrb	r2, [r2, #4]
 8000408:	4611      	mov	r1, r2
 800040a:	2201      	movs	r2, #1
 800040c:	408a      	lsls	r2, r1
 800040e:	4611      	mov	r1, r2
 8000410:	4a7a      	ldr	r2, [pc, #488]	; (80005fc <GPIO_Init+0x2ec>)
 8000412:	430b      	orrs	r3, r1
 8000414:	6093      	str	r3, [r2, #8]
		 }

		// 2. Configre port selection in SYSCFG_EXTICRx
		 uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	791b      	ldrb	r3, [r3, #4]
 800041a:	089b      	lsrs	r3, r3, #2
 800041c:	74fb      	strb	r3, [r7, #19]
		 uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4 ;
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	791b      	ldrb	r3, [r3, #4]
 8000422:	f003 0303 	and.w	r3, r3, #3
 8000426:	74bb      	strb	r3, [r7, #18]
		 uint8_t PortCode = PORT_ADDRESS_TO_CODE(pGPIOHandle->pGPIOx);
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8000430:	d024      	beq.n	800047c <GPIO_Init+0x16c>
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	4a72      	ldr	r2, [pc, #456]	; (8000600 <GPIO_Init+0x2f0>)
 8000438:	4293      	cmp	r3, r2
 800043a:	d01d      	beq.n	8000478 <GPIO_Init+0x168>
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	4a70      	ldr	r2, [pc, #448]	; (8000604 <GPIO_Init+0x2f4>)
 8000442:	4293      	cmp	r3, r2
 8000444:	d016      	beq.n	8000474 <GPIO_Init+0x164>
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	4a6f      	ldr	r2, [pc, #444]	; (8000608 <GPIO_Init+0x2f8>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d00f      	beq.n	8000470 <GPIO_Init+0x160>
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	4a6d      	ldr	r2, [pc, #436]	; (800060c <GPIO_Init+0x2fc>)
 8000456:	4293      	cmp	r3, r2
 8000458:	d008      	beq.n	800046c <GPIO_Init+0x15c>
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	4a6c      	ldr	r2, [pc, #432]	; (8000610 <GPIO_Init+0x300>)
 8000460:	4293      	cmp	r3, r2
 8000462:	d101      	bne.n	8000468 <GPIO_Init+0x158>
 8000464:	2305      	movs	r3, #5
 8000466:	e00a      	b.n	800047e <GPIO_Init+0x16e>
 8000468:	2300      	movs	r3, #0
 800046a:	e008      	b.n	800047e <GPIO_Init+0x16e>
 800046c:	2304      	movs	r3, #4
 800046e:	e006      	b.n	800047e <GPIO_Init+0x16e>
 8000470:	2303      	movs	r3, #3
 8000472:	e004      	b.n	800047e <GPIO_Init+0x16e>
 8000474:	2302      	movs	r3, #2
 8000476:	e002      	b.n	800047e <GPIO_Init+0x16e>
 8000478:	2301      	movs	r3, #1
 800047a:	e000      	b.n	800047e <GPIO_Init+0x16e>
 800047c:	2300      	movs	r3, #0
 800047e:	747b      	strb	r3, [r7, #17]
		 SYSCFG_PClk_EN();
 8000480:	4b64      	ldr	r3, [pc, #400]	; (8000614 <GPIO_Init+0x304>)
 8000482:	699b      	ldr	r3, [r3, #24]
 8000484:	4a63      	ldr	r2, [pc, #396]	; (8000614 <GPIO_Init+0x304>)
 8000486:	f043 0301 	orr.w	r3, r3, #1
 800048a:	6193      	str	r3, [r2, #24]
		 SYSCFG->EXTICR[temp1] = (PortCode << (temp2 * 4));
 800048c:	7c7a      	ldrb	r2, [r7, #17]
 800048e:	7cbb      	ldrb	r3, [r7, #18]
 8000490:	009b      	lsls	r3, r3, #2
 8000492:	fa02 f103 	lsl.w	r1, r2, r3
 8000496:	4a60      	ldr	r2, [pc, #384]	; (8000618 <GPIO_Init+0x308>)
 8000498:	7cfb      	ldrb	r3, [r7, #19]
 800049a:	3302      	adds	r3, #2
 800049c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// 3. Configure exit interrupt EXTI->IMR
		 EXTI->IMR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a0:	4b56      	ldr	r3, [pc, #344]	; (80005fc <GPIO_Init+0x2ec>)
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	687a      	ldr	r2, [r7, #4]
 80004a6:	7912      	ldrb	r2, [r2, #4]
 80004a8:	4611      	mov	r1, r2
 80004aa:	2201      	movs	r2, #1
 80004ac:	408a      	lsls	r2, r1
 80004ae:	4611      	mov	r1, r2
 80004b0:	4a52      	ldr	r2, [pc, #328]	; (80005fc <GPIO_Init+0x2ec>)
 80004b2:	430b      	orrs	r3, r1
 80004b4:	6013      	str	r3, [r2, #0]

	 }

    temp=0; //temp. register
 80004b6:	2300      	movs	r3, #0
 80004b8:	617b      	str	r3, [r7, #20]

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	799b      	ldrb	r3, [r3, #6]
 80004be:	461a      	mov	r2, r3
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	791b      	ldrb	r3, [r3, #4]
 80004c4:	005b      	lsls	r3, r3, #1
 80004c6:	fa02 f303 	lsl.w	r3, r2, r3
 80004ca:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	689a      	ldr	r2, [r3, #8]
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	791b      	ldrb	r3, [r3, #4]
 80004d6:	005b      	lsls	r3, r3, #1
 80004d8:	2103      	movs	r1, #3
 80004da:	fa01 f303 	lsl.w	r3, r1, r3
 80004de:	43db      	mvns	r3, r3
 80004e0:	4619      	mov	r1, r3
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	400a      	ands	r2, r1
 80004e8:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	6899      	ldr	r1, [r3, #8]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	697a      	ldr	r2, [r7, #20]
 80004f6:	430a      	orrs	r2, r1
 80004f8:	609a      	str	r2, [r3, #8]

	  temp=0; //temp. register
 80004fa:	2300      	movs	r3, #0
 80004fc:	617b      	str	r3, [r7, #20]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	79db      	ldrb	r3, [r3, #7]
 8000502:	461a      	mov	r2, r3
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	791b      	ldrb	r3, [r3, #4]
 8000508:	005b      	lsls	r3, r3, #1
 800050a:	fa02 f303 	lsl.w	r3, r2, r3
 800050e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	68da      	ldr	r2, [r3, #12]
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	791b      	ldrb	r3, [r3, #4]
 800051a:	005b      	lsls	r3, r3, #1
 800051c:	2103      	movs	r1, #3
 800051e:	fa01 f303 	lsl.w	r3, r1, r3
 8000522:	43db      	mvns	r3, r3
 8000524:	4619      	mov	r1, r3
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	400a      	ands	r2, r1
 800052c:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	68d9      	ldr	r1, [r3, #12]
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	697a      	ldr	r2, [r7, #20]
 800053a:	430a      	orrs	r2, r1
 800053c:	60da      	str	r2, [r3, #12]

	  temp=0; //temp. register
 800053e:	2300      	movs	r3, #0
 8000540:	617b      	str	r3, [r7, #20]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	7a1b      	ldrb	r3, [r3, #8]
 8000546:	461a      	mov	r2, r3
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	791b      	ldrb	r3, [r3, #4]
 800054c:	fa02 f303 	lsl.w	r3, r2, r3
 8000550:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	685a      	ldr	r2, [r3, #4]
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	791b      	ldrb	r3, [r3, #4]
 800055c:	4619      	mov	r1, r3
 800055e:	2301      	movs	r3, #1
 8000560:	408b      	lsls	r3, r1
 8000562:	43db      	mvns	r3, r3
 8000564:	4619      	mov	r1, r3
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	400a      	ands	r2, r1
 800056c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	6859      	ldr	r1, [r3, #4]
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	697a      	ldr	r2, [r7, #20]
 800057a:	430a      	orrs	r2, r1
 800057c:	605a      	str	r2, [r3, #4]

	  temp=0; //temp. register
 800057e:	2300      	movs	r3, #0
 8000580:	617b      	str	r3, [r7, #20]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	795b      	ldrb	r3, [r3, #5]
 8000586:	2b02      	cmp	r3, #2
 8000588:	d131      	bne.n	80005ee <GPIO_Init+0x2de>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	791b      	ldrb	r3, [r3, #4]
 800058e:	08db      	lsrs	r3, r3, #3
 8000590:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	791b      	ldrb	r3, [r3, #4]
 8000596:	f003 0307 	and.w	r3, r3, #7
 800059a:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	7c3a      	ldrb	r2, [r7, #16]
 80005a2:	3208      	adds	r2, #8
 80005a4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005a8:	7bfb      	ldrb	r3, [r7, #15]
 80005aa:	009b      	lsls	r3, r3, #2
 80005ac:	220f      	movs	r2, #15
 80005ae:	fa02 f303 	lsl.w	r3, r2, r3
 80005b2:	43db      	mvns	r3, r3
 80005b4:	4618      	mov	r0, r3
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	7c3a      	ldrb	r2, [r7, #16]
 80005bc:	4001      	ands	r1, r0
 80005be:	3208      	adds	r2, #8
 80005c0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	7c3a      	ldrb	r2, [r7, #16]
 80005ca:	3208      	adds	r2, #8
 80005cc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	7a5b      	ldrb	r3, [r3, #9]
 80005d4:	461a      	mov	r2, r3
 80005d6:	7bfb      	ldrb	r3, [r7, #15]
 80005d8:	009b      	lsls	r3, r3, #2
 80005da:	fa02 f303 	lsl.w	r3, r2, r3
 80005de:	4618      	mov	r0, r3
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	7c3a      	ldrb	r2, [r7, #16]
 80005e6:	4301      	orrs	r1, r0
 80005e8:	3208      	adds	r2, #8
 80005ea:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
	  temp=0; //temp. register
 80005ee:	2300      	movs	r3, #0
 80005f0:	617b      	str	r3, [r7, #20]

}
 80005f2:	bf00      	nop
 80005f4:	3718      	adds	r7, #24
 80005f6:	46bd      	mov	sp, r7
 80005f8:	bd80      	pop	{r7, pc}
 80005fa:	bf00      	nop
 80005fc:	40010400 	.word	0x40010400
 8000600:	48000400 	.word	0x48000400
 8000604:	48000800 	.word	0x48000800
 8000608:	48000c00 	.word	0x48000c00
 800060c:	48001000 	.word	0x48001000
 8000610:	48001400 	.word	0x48001400
 8000614:	40021000 	.word	0x40021000
 8000618:	40010000 	.word	0x40010000

0800061c <GPIO_ReadFromInputPin>:
 *
 * @Note              -

 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800061c:	b480      	push	{r7}
 800061e:	b085      	sub	sp, #20
 8000620:	af00      	add	r7, sp, #0
 8000622:	6078      	str	r0, [r7, #4]
 8000624:	460b      	mov	r3, r1
 8000626:	70fb      	strb	r3, [r7, #3]
   uint8_t value;

   value = (uint8_t )((pGPIOx->IDR  >> PinNumber) & 0x00000001 ) ;
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	691a      	ldr	r2, [r3, #16]
 800062c:	78fb      	ldrb	r3, [r7, #3]
 800062e:	fa22 f303 	lsr.w	r3, r2, r3
 8000632:	b2db      	uxtb	r3, r3
 8000634:	f003 0301 	and.w	r3, r3, #1
 8000638:	73fb      	strb	r3, [r7, #15]

   return value;
 800063a:	7bfb      	ldrb	r3, [r7, #15]
}
 800063c:	4618      	mov	r0, r3
 800063e:	3714      	adds	r7, #20
 8000640:	46bd      	mov	sp, r7
 8000642:	bc80      	pop	{r7}
 8000644:	4770      	bx	lr

08000646 <GPIO_ToggleOutputPin>:
 *
 * @Note              -

 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000646:	b480      	push	{r7}
 8000648:	b083      	sub	sp, #12
 800064a:	af00      	add	r7, sp, #0
 800064c:	6078      	str	r0, [r7, #4]
 800064e:	460b      	mov	r3, r1
 8000650:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber);
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	695b      	ldr	r3, [r3, #20]
 8000656:	78fa      	ldrb	r2, [r7, #3]
 8000658:	2101      	movs	r1, #1
 800065a:	fa01 f202 	lsl.w	r2, r1, r2
 800065e:	405a      	eors	r2, r3
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	615a      	str	r2, [r3, #20]
}
 8000664:	bf00      	nop
 8000666:	370c      	adds	r7, #12
 8000668:	46bd      	mov	sp, r7
 800066a:	bc80      	pop	{r7}
 800066c:	4770      	bx	lr
	...

08000670 <delay>:
#endif

// STM32F303RE is having internal LED connected on PA5

void delay(void)
{
 8000670:	b480      	push	{r7}
 8000672:	b083      	sub	sp, #12
 8000674:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 300000; i++);
 8000676:	2300      	movs	r3, #0
 8000678:	607b      	str	r3, [r7, #4]
 800067a:	e002      	b.n	8000682 <delay+0x12>
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	3301      	adds	r3, #1
 8000680:	607b      	str	r3, [r7, #4]
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	4a04      	ldr	r2, [pc, #16]	; (8000698 <delay+0x28>)
 8000686:	4293      	cmp	r3, r2
 8000688:	d9f8      	bls.n	800067c <delay+0xc>
}
 800068a:	bf00      	nop
 800068c:	bf00      	nop
 800068e:	370c      	adds	r7, #12
 8000690:	46bd      	mov	sp, r7
 8000692:	bc80      	pop	{r7}
 8000694:	4770      	bx	lr
 8000696:	bf00      	nop
 8000698:	000493df 	.word	0x000493df

0800069c <main>:


int main(void)
{
 800069c:	b580      	push	{r7, lr}
 800069e:	b088      	sub	sp, #32
 80006a0:	af00      	add	r7, sp, #0
	// Feed the data
	GPIO_Handle_t GPIOA_Handle;
	GPIO_Handle_t GPIOC_Handle;

	GPIOA_Handle.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80006a2:	2305      	movs	r3, #5
 80006a4:	753b      	strb	r3, [r7, #20]
	GPIOA_Handle.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80006a6:	2301      	movs	r3, #1
 80006a8:	757b      	strb	r3, [r7, #21]
	GPIOA_Handle.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80006aa:	2300      	movs	r3, #0
 80006ac:	75fb      	strb	r3, [r7, #23]
	GPIOA_Handle.GPIO_PinConfig.GPIO_PinSpeed = GPOI_SPEED_HIGH;
 80006ae:	2303      	movs	r3, #3
 80006b0:	75bb      	strb	r3, [r7, #22]
	GPIOA_Handle.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80006b2:	2300      	movs	r3, #0
 80006b4:	763b      	strb	r3, [r7, #24]

	GPIOC_Handle.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13 ;
 80006b6:	230d      	movs	r3, #13
 80006b8:	723b      	strb	r3, [r7, #8]
	GPIOC_Handle.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 80006ba:	2300      	movs	r3, #0
 80006bc:	727b      	strb	r3, [r7, #9]

	GPIOC_Handle.pGPIOx = GPIOC;
 80006be:	4b14      	ldr	r3, [pc, #80]	; (8000710 <main+0x74>)
 80006c0:	607b      	str	r3, [r7, #4]

	GPIOA_Handle.pGPIOx = GPIOA;
 80006c2:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80006c6:	613b      	str	r3, [r7, #16]

	// Enable the clock
	GPIO_PeriClockControl(GPIOA, ENABLE);
 80006c8:	2101      	movs	r1, #1
 80006ca:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80006ce:	f7ff fd81 	bl	80001d4 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOC, ENABLE);
 80006d2:	2101      	movs	r1, #1
 80006d4:	480e      	ldr	r0, [pc, #56]	; (8000710 <main+0x74>)
 80006d6:	f7ff fd7d 	bl	80001d4 <GPIO_PeriClockControl>

	// Init call
	GPIO_Init(&GPIOA_Handle);
 80006da:	f107 0310 	add.w	r3, r7, #16
 80006de:	4618      	mov	r0, r3
 80006e0:	f7ff fe16 	bl	8000310 <GPIO_Init>

	GPIO_Init(&GPIOC_Handle);
 80006e4:	1d3b      	adds	r3, r7, #4
 80006e6:	4618      	mov	r0, r3
 80006e8:	f7ff fe12 	bl	8000310 <GPIO_Init>
	// main operation

	while(1)
	{

	uint8_t Value = GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13);
 80006ec:	210d      	movs	r1, #13
 80006ee:	4808      	ldr	r0, [pc, #32]	; (8000710 <main+0x74>)
 80006f0:	f7ff ff94 	bl	800061c <GPIO_ReadFromInputPin>
 80006f4:	4603      	mov	r3, r0
 80006f6:	77fb      	strb	r3, [r7, #31]

	if(Value == 0)
 80006f8:	7ffb      	ldrb	r3, [r7, #31]
 80006fa:	2b00      	cmp	r3, #0
 80006fc:	d1f6      	bne.n	80006ec <main+0x50>
	{
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 80006fe:	2105      	movs	r1, #5
 8000700:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000704:	f7ff ff9f 	bl	8000646 <GPIO_ToggleOutputPin>
		delay();
 8000708:	f7ff ffb2 	bl	8000670 <delay>
	{
 800070c:	e7ee      	b.n	80006ec <main+0x50>
 800070e:	bf00      	nop
 8000710:	48000800 	.word	0x48000800

08000714 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000714:	480d      	ldr	r0, [pc, #52]	; (800074c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000716:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000718:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800071c:	480c      	ldr	r0, [pc, #48]	; (8000750 <LoopForever+0x6>)
  ldr r1, =_edata
 800071e:	490d      	ldr	r1, [pc, #52]	; (8000754 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000720:	4a0d      	ldr	r2, [pc, #52]	; (8000758 <LoopForever+0xe>)
  movs r3, #0
 8000722:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000724:	e002      	b.n	800072c <LoopCopyDataInit>

08000726 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000726:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000728:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800072a:	3304      	adds	r3, #4

0800072c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800072c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800072e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000730:	d3f9      	bcc.n	8000726 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000732:	4a0a      	ldr	r2, [pc, #40]	; (800075c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000734:	4c0a      	ldr	r4, [pc, #40]	; (8000760 <LoopForever+0x16>)
  movs r3, #0
 8000736:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000738:	e001      	b.n	800073e <LoopFillZerobss>

0800073a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800073a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800073c:	3204      	adds	r2, #4

0800073e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800073e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000740:	d3fb      	bcc.n	800073a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000742:	f000 f811 	bl	8000768 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000746:	f7ff ffa9 	bl	800069c <main>

0800074a <LoopForever>:

LoopForever:
  b LoopForever
 800074a:	e7fe      	b.n	800074a <LoopForever>
  ldr   r0, =_estack
 800074c:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000750:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000754:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000758:	080007d0 	.word	0x080007d0
  ldr r2, =_sbss
 800075c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000760:	2000001c 	.word	0x2000001c

08000764 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000764:	e7fe      	b.n	8000764 <ADC1_2_IRQHandler>
	...

08000768 <__libc_init_array>:
 8000768:	b570      	push	{r4, r5, r6, lr}
 800076a:	4d0d      	ldr	r5, [pc, #52]	; (80007a0 <__libc_init_array+0x38>)
 800076c:	4c0d      	ldr	r4, [pc, #52]	; (80007a4 <__libc_init_array+0x3c>)
 800076e:	1b64      	subs	r4, r4, r5
 8000770:	10a4      	asrs	r4, r4, #2
 8000772:	2600      	movs	r6, #0
 8000774:	42a6      	cmp	r6, r4
 8000776:	d109      	bne.n	800078c <__libc_init_array+0x24>
 8000778:	4d0b      	ldr	r5, [pc, #44]	; (80007a8 <__libc_init_array+0x40>)
 800077a:	4c0c      	ldr	r4, [pc, #48]	; (80007ac <__libc_init_array+0x44>)
 800077c:	f000 f818 	bl	80007b0 <_init>
 8000780:	1b64      	subs	r4, r4, r5
 8000782:	10a4      	asrs	r4, r4, #2
 8000784:	2600      	movs	r6, #0
 8000786:	42a6      	cmp	r6, r4
 8000788:	d105      	bne.n	8000796 <__libc_init_array+0x2e>
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000790:	4798      	blx	r3
 8000792:	3601      	adds	r6, #1
 8000794:	e7ee      	b.n	8000774 <__libc_init_array+0xc>
 8000796:	f855 3b04 	ldr.w	r3, [r5], #4
 800079a:	4798      	blx	r3
 800079c:	3601      	adds	r6, #1
 800079e:	e7f2      	b.n	8000786 <__libc_init_array+0x1e>
 80007a0:	080007c8 	.word	0x080007c8
 80007a4:	080007c8 	.word	0x080007c8
 80007a8:	080007c8 	.word	0x080007c8
 80007ac:	080007cc 	.word	0x080007cc

080007b0 <_init>:
 80007b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007b2:	bf00      	nop
 80007b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007b6:	bc08      	pop	{r3}
 80007b8:	469e      	mov	lr, r3
 80007ba:	4770      	bx	lr

080007bc <_fini>:
 80007bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007be:	bf00      	nop
 80007c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007c2:	bc08      	pop	{r3}
 80007c4:	469e      	mov	lr, r3
 80007c6:	4770      	bx	lr
